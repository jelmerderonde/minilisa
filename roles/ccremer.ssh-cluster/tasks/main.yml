---
- name: Check whether {{ ssh_user }} has ssh key
  stat:
    path: "{{ root_keyfile }}"
  register: key
  become: false

- name: Create ecdsa ssh-key for {{ ssh_user }}
  command: ssh-keygen -t ecdsa -N '' -f {{ root_keyfile }}
  when: key.stat.exists == False
  become: false

- name: Downloading user key
  become: false
  fetch:
    src: "{{ root_keyfile }}.pub"
    dest: "{{ tmp_keyfile }}"
    flat: yes

- name: Downloading host key
  become: false
  fetch:
    src: "{{ host_keyfile }}"
    dest: "{{ tmp_host_keyfile }}"
    flat: yes

- name: Distribute key to targets
  include_tasks: pushkey.yml
  become: false
  vars:
    - target: "{{ item }}"
    - become_user: "{{ ssh_user }}"
  with_items: "{{ ssh_targets }}"

- name: Deleting temporal key
  local_action: file path={{ tmp_keyfile }} state=absent
  ignore_errors: true
